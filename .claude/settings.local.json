{
  "permissions": {
    "allow": [
      "Bash(npm install:*)",
      "Bash(npm run db:generate:*)",
      "Bash(npm run db:push:*)",
      "Bash(npm run db:studio:*)",
      "Bash(npm run db:seed:*)",
      "Bash(curl:*)",
      "Bash(git add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfeat: Implement Week 1-4 MVP features\n\nWeek 1-2: Database & Data Collection\n- Setup Turso database with Drizzle ORM\n- Define schema (media_sources, articles, tags, article_tags, crawl_logs)\n- Implement Qiita API client with authentication\n- Implement Zenn API client\n- Create article collection batch endpoint with error handling\n- Add trend score calculation algorithm\n- Seed initial media sources data\n\nWeek 3-4: Frontend & API\n- Implement REST API endpoints (articles, tags, media-sources)\n- Add pagination, filtering, sorting, and search functionality\n- Create responsive article card component\n- Build filter bar with media/period/tag/search filters\n- Add sidebar with popular tags cloud and stats\n- Implement header with navigation\n- Setup layout with sticky header and sidebars\n- Add loading and error states\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(gh repo create:*)",
      "Bash(npm run build:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(vercel login)",
      "Bash(node -e \"console.log(require(''crypto'').randomBytes(32).toString(''hex''))\")",
      "Bash(vercel env add TURSO_DATABASE_URL production)",
      "Bash(vercel)",
      "Bash(vercel --yes)",
      "Bash(vercel env add TURSO_AUTH_TOKEN production)",
      "Bash(vercel env add QIITA_ACCESS_TOKEN production)",
      "Bash(vercel env add CRON_SECRET production)",
      "Bash(vercel env add NEXT_PUBLIC_APP_URL production)",
      "Bash(vercel env ls)",
      "Bash(vercel --prod --yes)",
      "Bash(vercel env rm TURSO_DATABASE_URL production --yes)",
      "Bash(vercel env rm TURSO_AUTH_TOKEN production --yes)",
      "Bash(vercel env rm QIITA_ACCESS_TOKEN production --yes)",
      "Bash(vercel env rm CRON_SECRET production --yes)",
      "Bash(vercel env rm NEXT_PUBLIC_APP_URL production --yes)",
      "WebSearch",
      "Bash(vercel inspect catch-up-v2-h27t4ju5w-shinsibainus-projects.vercel.app --logs)",
      "WebFetch(domain:note.com)",
      "Bash(vercel ls)",
      "Bash(vercel project catch-up-v2)",
      "Bash(vercel project inspect catch-up-v2)",
      "WebFetch(domain:nomad-dev-life.net)",
      "WebFetch(domain:www.help-note.com)",
      "mcp__chrome-devtools__list_pages",
      "mcp__chrome-devtools__navigate_page",
      "mcp__chrome-devtools__take_screenshot",
      "mcp__chrome-devtools__take_snapshot",
      "mcp__chrome-devtools__evaluate_script",
      "Bash(npx tsx:*)",
      "Bash(dotenv -e .env.local -- npx tsx:*)",
      "Bash(npm run db:reset-note:*)",
      "Bash(paste:*)",
      "mcp__chrome-devtools__resize_page",
      "mcp__chrome-devtools__new_page",
      "Bash(node:*)",
      "mcp__chrome-devtools__performance_start_trace",
      "mcp__chrome-devtools__performance_analyze_insight",
      "Bash(git checkout -b develop)",
      "Bash(vercel env add TURSO_DATABASE_URL preview)",
      "Bash(vercel env add TURSO_AUTH_TOKEN preview)",
      "Bash(vercel env add QIITA_ACCESS_TOKEN preview)",
      "Bash(vercel env add CRON_SECRET preview)",
      "Bash(vercel env add NEXT_PUBLIC_APP_URL preview)",
      "Bash(vercel env rm TURSO_DATABASE_URL preview --yes)",
      "Bash(vercel env rm TURSO_AUTH_TOKEN preview --yes)",
      "Bash(vercel env rm QIITA_ACCESS_TOKEN preview --yes)",
      "Bash(vercel env rm CRON_SECRET preview --yes)",
      "Bash(vercel env rm NEXT_PUBLIC_APP_URL preview --yes)",
      "Bash(gh pr create --base master --head develop --title \"Merge develop into master\" --body \"$(cat <<''EOF''\n## 変更内容\n\n### 新機能\n- note.com統合（非公式API v3）\n  - 有料記事フィルタリング\n  - ブロックリスト機能\n- メディア別カラーコーディング & 絵文字バッジ（📗 Qiita, ⚡ Zenn, 📝 note）\n- OGP画像動的生成 (/api/og)\n- PWAマニフェスト & SVG favicon\n\n### パフォーマンス改善\n- ISR (Incremental Static Regeneration) - 1時間キャッシュ\n- DAL (Data Access Layer) 実装\n  - コード削減: /api/articles (195行 → 56行)\n- N+1問題の解消 - 10倍以上の速度向上\n\n### バグ修正\n- 初期ページネーション表示の修正\n- 期間フィルターの修正\n\n### インフラ\n- ブランチ戦略導入（master/develop）\n- Preview環境の環境変数設定完了\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\nEOF\n)\")",
      "Bash(gh pr merge 1 --merge)",
      "Bash(git checkout master)",
      "Bash(git pull)",
      "Bash(git stash)",
      "Bash(git stash pop)",
      "Bash(git checkout develop)",
      "Bash(npm run dev)",
      "Bash(npx drizzle-kit studio)",
      "mcp__chrome-devtools__list_console_messages",
      "Bash(netstat -ano)",
      "Bash(findstr :3000)",
      "Bash(taskkill /F /PID 25456)",
      "Bash(taskkill /F /PID 9592)",
      "Bash(taskkill //F //PID 25456)",
      "mcp__chrome-devtools__click",
      "mcp__chrome-devtools__fill_form",
      "mcp__chrome-devtools__wait_for",
      "mcp__chrome-devtools__list_network_requests",
      "mcp__chrome-devtools__get_network_request",
      "WebFetch(domain:developer.hatenastaff.com)"
    ],
    "deny": [],
    "ask": []
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "chrome-devtools"
  ]
}
